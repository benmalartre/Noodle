#version 330in vec2 texCoords;out vec4 outColor;uniform float iGlobalTime;uniform vec2 iResolution;float hash( float n ) { return fract(sin(n)*123.456789); }float noise( in vec3 p ){    vec3 fl = floor( p );    vec3 fr = fract( p );    fr = fr * fr * ( 3.0 - 2.0 * fr );    float n = fl.x + fl.y * 157.0 + 113.0 * fl.z;    return mix( mix( mix( hash( n +   0.0), hash( n +   1.0 ), fr.x ),                     mix( hash( n + 157.0), hash( n + 158.0 ), fr.x ), fr.y ),                mix( mix( hash( n + 113.0), hash( n + 114.0 ), fr.x ),                     mix( hash( n + 270.0), hash( n + 271.0 ), fr.x ), fr.y ), fr.z );}float fbm( in vec2 p, float t ){    float f;    f  = 0.5000 * noise( vec3( p, t ) ); p *= 2.1;    f += 0.2500 * noise( vec3( p, t ) ); p *= 2.2;    f += 0.1250 * noise( vec3( p, t ) ); p *= 2.3;    f += 0.0625 * noise( vec3( p, t ) );    return f;}void main(){outColor = vec4(noise(vec3(texCoords*100,iGlobalTime)),0.0,0.0,1.0); //outColor = vec4(fbm(texCoords*5,iGlobalTime),0.0,0.0,1.0);