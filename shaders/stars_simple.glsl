#version 330in vec2 texCoords;out vec4 outColor;uniform float iGlobalTime;uniform vec2 iResolution;uniform mat4 view;vec2 hash( vec2 p ){    p = vec2( dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3)));    return fract(sin(p)*43758.5453);}void main(  ){	mat3 rot = mat3(inverse(view));	vec2 uv = texCoords;        vec2 position = uv * 2. - 1.;    position.x *= iResolution.x / iResolution.y;    //position = rot * position;    float scale = 66.;    float radius = .5;        vec4 color = vec4(0.);        vec2 gridPosition = floor(position * scale) / scale;vec2 randomOffset = hash(gridPosition) * 2. - 1.;vec2 localGridPositionCenter = fract(position * scale) - .5;        color.rgb += mix(0., 1., step(length(localGridPositionCenter + randomOffset * .5), .1));    	outColor = color;