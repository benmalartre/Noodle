#version 330in vec2 texCoords;out vec4 outColor;uniform float iGlobalTime;uniform vec2 iResolution;uniform sampler2D iChannel0;uniform mat4 view;#define STARDISTANCE 150.#define STARBRIGHTNESS 1.#define STARDENCITY 0.01float hash13(vec3 p3){	p3  = fract(p3 * vec3(.1031,.11369,.13787));    p3 += dot(p3, p3.yzx + 19.19);    return fract((p3.x + p3.y) * p3.z);}float stars(vec3 ray){    vec3 p = ray * STARDISTANCE;    float brigtness = smoothstep(1.0 - STARDENCITY, 1.0, hash13(floor(p)));    return smoothstep(STARBRIGHTNESS, 0., length(fract(p) - 0.5)) * brigtness;}void main( ){mat3 rot = mat3(inverse(view));vec3 ray = vec3(1-texCoords*2,1.0);ray = rot * normalize(ray);    //vec3 ray = camera(texCoords*iResolution);    float s = stars(ray);	outColor = vec4(s, s ,s ,1.0);