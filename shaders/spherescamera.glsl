#version 330in vec2 texCoords;out vec4 outColor;uniform float iGlobalTime;uniform vec2 iResolution;uniform mat4 view;const vec3 pos = vec3(0.0,1.0,0.0);const float radius = 11.0;float iSphere(in vec3 ro, in vec3 rd,vec3 p,float radius){    vec3 oc = ro-p;    float b = dot(oc, rd);    float c = dot(oc,oc) - radius;    float h = b*b - c;    if(h <0.0) return -1.;    return -b - sqrt(h);}void main(){	vec2 p =1-texCoords.xy*2;	//p.x*=iResolution.x/iResolution.y;mat3 rot = mat3((view));vec3 dir = vec3(p,1.0);dir = normalize(dir);float h = iSphere(rot * view[3].xyz,rot*dir,vec3(0,8,0),radius);outColor = vec4(h,0,0,1);h = iSphere(rot * view[3].xyz,rot*dir,vec3(4,0,0),radius);outColor += vec4(0,h,0,1); //outColor = vec4(texCoords,0.0,1.0);